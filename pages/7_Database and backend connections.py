import streamlit as st
import mysql.connector

st.subheader("ржЕржзрзНржпрж╛рзЯ рзн: ржбрзЗржЯрж╛ржмрзЗрж╕ ржУ ржмрзНржпрж╛ржХржПржирзНржб рж╕ржВржпрзЛржЧ тАФ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЧрж╛ржЗржб (SQLite & MySQL, ржлрж░рзНржо ржерзЗржХрзЗ ржбрзЗржЯрж╛ рж╕рзЗржн, рж░рж┐рзЯрзЗрж▓ ржЯрж╛ржЗржо ржбрзЗржЯрж╛ ржжрзЗржЦрж╛ржирзЛ)")

st.subheader("""ржнрзВржорж┐ржХрж╛
ржбрзЗржЯрж╛ржмрзЗрж╕ рж╣рж▓рзЛ рждрзЛржорж╛рж░ ржЕрзНржпрж╛ржкрзЗрж░ тАШржорзЗржорж░рж┐тАЩ ржпрзЗржЦрж╛ржирзЗ ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржиржкрзБржЯ, рждржерзНржп, ржбрзЗржЯрж╛ рж╕ржм рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣рзЯред
Python ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ SQLite ржмрж╛ MySQL ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ ржУ CRUD (Create, Read, Update, Delete) ржЕржкрж╛рж░рзЗрж╢ржи ржХрж░рж╛ рж╣рзЯред

ржПржЗ ржкрзЛрж╕рзНржЯрзЗ рждрзБржорж┐ рж╢рж┐ржЦржмрзЗ тАФ

SQLite ржУ MySQL рж╕ржВржпрзЛржЧ ржХрзАржнрж╛ржмрзЗ ржХрж░рзЗ

Streamlit ржмрж╛ Python ржлрж░рзНржо ржерзЗржХрзЗ ржХрж┐ржнрж╛ржмрзЗ ржбрзЗржЯрж╛ ржбрзЗржЯрж╛ржмрзЗрж╕рзЗ рж╕рзЗржн ржХрж░рзЗ

ржбрзЗржЯрж╛ржмрзЗрж╕ ржерзЗржХрзЗ ржбрзЗржЯрж╛ рж░рж┐рзЯрзЗрж▓ ржЯрж╛ржЗржорзЗ ржХрж┐ржнрж╛ржмрзЗ ржжрзЗржЦрж╛ржирзЛ ржпрж╛рзЯ

ржХрзЛржерж╛рзЯ ржХрзЛржи ржХрзЛржб рж░рж╛ржЦржмрзЗ, ржкрзНрж░ржЬрзЗржХрзНржЯ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ ржХрзЗржоржи рж╣ржмрзЗ

""")

st.subheader("""ржкрзНрж░ржпрж╝рзЛржЬржирзАрзЯрждрж╛
             
Python (рзй.рзн+ ржнрж╛рж░рзНрж╕ржи)

Streamlit (ржпржжрж┐ Streamlit ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЛ)

SQLite3 (Python ржПрж░ ржмрж┐рж▓рзНржЯ-ржЗржи)

MySQL Server (ржпржжрж┐ MySQL ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЛ)

MySQL Connector/Python рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ (MySQL ржПрж░ ржЬржирзНржп)

рж╕рж╛ржзрж╛рж░ржг Python/IDE (VS Code, PyCharm, Jupyter ржЗрждрзНржпрж╛ржжрж┐)""")



st.code('''ржкрзНрж░ржЬрзЗржХрзНржЯ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░

my_project/
тФВ
тФЬтФАтФА app.py                 # ржорзЗржЗржи Streamlit ржЕрзНржпрж╛ржк ржпрзЗржЦрж╛ржирзЗ UI ржПржмржВ ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ ржерж╛ржХржмрзЗ
тФЬтФАтФА database.py            # (Optional) ржбрзЗржЯрж╛ржмрзЗрж╕ ржХрж╛ржирзЗржХрж╢ржи ржПржмржВ ржлрж╛ржВрж╢ржиржЧрзБрж▓рзЛ ржЖрж▓рж╛ржжрж╛ ржлрж╛ржЗрж▓рзЗ рж░рж╛ржЦрждрзЗ ржкрж╛рж░рзЛ
тФЬтФАтФА student.db             # SQLite ржбрзЗржЯрж╛ржмрзЗрж╕ ржлрж╛ржЗрж▓ (SQLite ржПрж░ ржЬржирзНржп)
тФФтФАтФА requirements.txt       # ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржкрзНржпрж╛ржХрзЗржЬржЧрзБрж▓рзЛ рж▓рж┐ржЦрзЗ рж░рж╛ржЦржмрзЗ''', language="bash")

st.subheader("""рзз. SQLite рж╕ржВржпрзЛржЧ ржУ CRUD ржЕржкрж╛рж░рзЗрж╢ржи
             
рзз.рзз ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ ржУ ржЯрзЗржмрж┐рж▓ рждрзИрж░рж┐""")

st.text('ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ')

st.code('''import sqlite3

# ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ (ржЕржержмрж╛ рждрзИрж░рж┐)
conn = sqlite3.connect('students.db', check_same_thread=False)
cursor = conn.cursor()

# ржЯрзЗржмрж┐рж▓ рждрзИрж░рж┐ (ржпржжрж┐ ржирж╛ ржерж╛ржХрзЗ ржЖржЧрзЗ ржерзЗржХрзЗ)
cursor.execute("""
CREATE TABLE IF NOT EXISTS students (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    age INTEGER,
    grade TEXT
)
""")
conn.commit()

''', language="bash")
st.write("ржмрж┐ржГржжрзНрж░ржГ check_same_thread=False Streamlit ржПрж░ ржЬржирзНржп ржжрж░ржХрж╛рж░ (ржорж╛рж▓рзНржЯрж┐ржкрж▓ ржерзНрж░рзЗржб рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж╛рж░ ржЬржирзНржп)ред")

with st.expander("ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрзБржи"):
    
    st.subheader("ржЙржкрж░рзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛрж░ ржмрзНржпрж╛ржЦрзНржпрж╛")
    
    st.subheader(""" рзз. import sqlite3

    import sqlite3
                 
    ЁЯСЙ ржПржЗ рж▓рж╛ржЗржи ржжрж┐рзЯрзЗ Python ржПрж░ ржоржзрзНржпрзЗ sqlite3 рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржЗржоржкрзЛрж░рзНржЯ ржХрж░рж╛ рж╣рзЯред
    sqlite3 рж╣рж▓ ржПржХржЯрж┐ ржмрж┐рж▓рзНржЯ-ржЗржи рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐, ржпрж╛ ржжрж┐рзЯрзЗ Python ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржерзЗржХрзЗ рж╕рж░рж╛рж╕рж░рж┐ SQLite ржбрзЗржЯрж╛ржмрзЗрж╕рзЗрж░ рж╕рж╛ржерзЗ ржХрж╛ржЬ ржХрж░рж╛ ржпрж╛рзЯред

    тЬЕ ржЕрждрж┐рж░рж┐ржХрзНржд ржХрж┐ржЫрзБ ржЗржирж╕рзНржЯрж▓ ржХрж░рждрзЗ рж╣рзЯ ржирж╛, ржХрж╛рж░ржг ржПржЯрж┐ Python ржПрж░ рж╕рж╛ржерзЗ ржЖржЧрзЗ ржерзЗржХрзЗржЗ ржерж╛ржХрзЗред""")

    st.subheader("""ЁЯФ╣ рзи. ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ рждрзИрж░рж┐

    conn = sqlite3.connect('students.db', check_same_thread=False)
                 
    ржмрзНржпрж╛ржЦрзНржпрж╛:
                 
    sqlite3.connect('students.db'): ржПржЯрж┐ students.db ржирж╛ржорзЗ ржПржХржЯрж┐ SQLite ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рзЗ (ржпржжрж┐ ржЖржЧрзЗ ржерзЗржХрзЗ ржирж╛ ржерж╛ржХрзЗ) ржПржмржВ рждрж╛рж░ рж╕рж╛ржерзЗ рж╕ржВржпрзЛржЧ рж╕рзНржерж╛ржкржи ржХрж░рзЗред

    ржПржЗ ржбрзЗржЯрж╛ржмрзЗрж╕ ржлрж╛ржЗрж▓ржЯрж┐ рждрзЛржорж╛рж░ ржкрзНрж░ржЬрзЗржХрзНржЯ ржлрзЛрж▓рзНржбрж╛рж░рзЗ рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХржмрзЗред

    check_same_thread=False: ржПржЯрж┐ Streamlit-ржПрж░ ржЬржирзНржп ржжрж░ржХрж╛рж░ рж╣рзЯ, ржХрж╛рж░ржг Streamlit ржмрж┐ржнрж┐ржирзНржи ржерзНрж░рзЗржб (thread) ржП ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рзЗред ржПржЯрж┐ ржирж╛ ржжрж┐рж▓рзЗ ржХржЦржирзЛ ржХржЦржирзЛ рждрзНрж░рзБржЯрж┐ (error) ржжрзЗржЦрж╛ ржжрж┐рждрзЗ ржкрж╛рж░рзЗред

    ЁЯУБ рж╕ржВржХрзНрж╖рзЗржкрзЗ: conn рж╣ржЪрзНржЫрзЗ рждрзЛржорж╛рж░ ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ, ржпрзЗржЯрж╛ ржкрж░ржмрж░рзНрждрзА рж╕ржорзЯрзЗ ржбрзЗржЯрж╛ ржЗржирж╕рж╛рж░рзНржЯ, рж░рж┐ржб, ржЖржкржбрзЗржЯ, ржбрж┐рж▓рж┐ржЯ ржХрж░рж╛рж░ ржХрж╛ржЬрзЗ ржмрзНржпржмрж╣рж╛рж░ рж╣ржмрзЗред""")

    st.subheader("""ЁЯФ╣ рзй. Cursor рждрзИрж░рж┐

    cursor = conn.cursor()
                 
    ржмрзНржпрж╛ржЦрзНржпрж╛:
                 
    cursor рж╣рж▓рзЛ ржПржХржЯрж┐ ржорж┐ржбрж┐рзЯрзЗржЯрж░/ржорж┐ржбрж▓ржорзНржпрж╛ржи, ржпрзЗржЯрж╛ ржжрж┐рзЯрзЗ рждрзБржорж┐ ржбрзЗржЯрж╛ржмрзЗрж╕рзЗ SQL ржХржорж╛ржирзНржб ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░рзЛред

    рждрзБржорж┐ cursor.execute() ржжрж┐рзЯрзЗ SQL ржХржорж╛ржирзНржб ржЪрж╛рж▓рж╛ржмрзЗ ржпрзЗржоржи: INSERT, SELECT, UPDATE, DELETE, ржЗрждрзНржпрж╛ржжрж┐ред
    """)

    st.subheader("""ЁЯФ╣ рзк. ржЯрзЗржмрж┐рж▓ рждрзИрж░рж┐ (ржпржжрж┐ ржирж╛ ржерж╛ржХрзЗ)

    cursor.execute(
    CREATE TABLE IF NOT EXISTS students (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT,
        age INTEGER,
        grade TEXT
    )
    )
    ржмрзНржпрж╛ржЦрзНржпрж╛:
  | ржХрж▓рж╛ржо   | ржЯрж╛ржЗржк                           | ржмрзНржпрж╛ржЦрзНржпрж╛                                                           |
|--------|--------------------------------|--------------------------------------------------------------------|
| id     | INTEGER PRIMARY KEY AUTOINCREMENT | ржПржЯрж┐ рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯржнрж╛ржмрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржЫрж╛рждрзНрж░рзЗрж░ ржЬржирзНржп ржЗржЙржирж┐ржХ ржЖржЗржбрж┐ рждрзИрж░рж┐ ржХрж░рзЗ (1, 2, 3...) |
| name   | TEXT                           | ржЫрж╛рждрзНрж░рзЗрж░ ржирж╛ржо                                                        |
| age    | INTEGER                        | ржЫрж╛рждрзНрж░рзЗрж░ ржмрзЯрж╕                                                       |
| grade  | TEXT                           | ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржпрзЗржоржи A+, B ржЗрждрзНржпрж╛ржжрж┐                                 |


    тЬЕ IF NOT EXISTS ржорж╛ржирзЗ ржЯрзЗржмрж┐рж▓ржЯрж╛ ржЖржЧрзЗ ржерзЗржХрзЗ ржирж╛ ржерж╛ржХрж▓рзЗ рждрзИрж░рж┐ ржХрж░ржмрзЗ тАФ ржПржХржЗ ржЯрзЗржмрж┐рж▓ ржмрж╛рж░ржмрж╛рж░ рждрзИрж░рж┐ ржХрж░рж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рж▓рзЗ ржпрзЗржи error ржирж╛ ржжрзЗрзЯред""")

    st.subheader("""ЁЯФ╣ рзл. conn.commit()

    conn.commit()
    ЁЯСЙ ржПржЗ рж▓рж╛ржЗржиржЯрж┐ рж╣рж▓рзЛ рж╕ржмрж╢рзЗрж╖рзЗ ржХрж░рж╛ ржХрж╛ржЬржЧрзБрж▓рзЛржХрзЗ ржбрзЗржЯрж╛ржмрзЗрж╕рзЗ рж╕рзНржерж╛рзЯрзАржнрж╛ржмрзЗ рж╕рзЗржн ржХрж░рж╛рж░ ржХржорж╛ржирзНржбред
    ржпржжрж┐ рждрзБржорж┐ commit() ржирж╛ рж▓рзЗржЦрзЛ, рждрж╛рж╣рж▓рзЗ SQL ржХржорж╛ржирзНржбржЧрзБрж▓рзЛ ржХрзЗржмрж▓ ржорзЗржорзЛрж░рж┐рждрзЗ ржерж╛ржХржмрзЗ тАФ ржбрзЗржЯрж╛ржмрзЗрж╕ ржлрж╛ржЗрж▓рзЗ рж╕рзЗржн рж╣ржмрзЗ ржирж╛ред""")

    st.subheader("""тЬЕ рж╕ржВржХрзНрж╖рзЗржкрзЗ ржкрзБрж░рзЛ ржХрж╛ржЬрзЗрж░ ржзрж╛ржкржЧрзБрж▓рзЛ:
                 
        | ржзрж╛ржк              | ржХрж╛ржЬ                                           |
    |------------------|-----------------------------------------------|
    | import sqlite3 | рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржЗржоржкрзЛрж░рзНржЯ                             |
    | connect()      | ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ ржмрж╛ рждрзИрж░рж┐                         |
    | cursor()       | SQL ржЪрж╛рж▓рж╛ржирзЛрж░ ржорж╛ржзрзНржпржо рждрзИрж░рж┐                      |
    | CREATE TABLE   | ржЯрзЗржмрж┐рж▓ рждрзИрж░рж┐                                     |
    | commit()       | ржЯрзЗржмрж┐рж▓ рждрзИрж░рж┐ ржмрж╛ ржбрзЗржЯрж╛ ржкрж░рж┐ржмрж░рзНрждржи рж╕рзЗржн ржХрж░рж╛           |
    """)


import sqlite3

# ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ (ржЕржержмрж╛ рждрзИрж░рж┐)
conn = sqlite3.connect('students.db', check_same_thread=False)
cursor = conn.cursor()

# ржЯрзЗржмрж┐рж▓ рждрзИрж░рж┐ (ржпржжрж┐ ржирж╛ ржерж╛ржХрзЗ ржЖржЧрзЗ ржерзЗржХрзЗ)
cursor.execute("""
CREATE TABLE IF NOT EXISTS students (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    age INTEGER,
    grade TEXT
)
""")
conn.commit()





st.subheader("рзз.рзи ржлрж░рзНржо ржерзЗржХрзЗ ржбрзЗржЯрж╛ рж╕рзЗржн ржХрж░рж╛ (Insert)")

st.text('ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ')

st.code('''import streamlit as st

st.title("ЁЯОУ ржЫрж╛рждрзНрж░ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛ ржЕрзНржпрж╛ржк")

with st.form("insert_form"):
    st.subheader("тЮХ ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзБржи")
    name = st.text_input("ржирж╛ржо")
    age = st.number_input("ржмрзЯрж╕", min_value=1, max_value=100)
    grade = st.text_input("ржЧрзНрж░рзЗржб (A+/B/C...)")
    insert_btn = st.form_submit_button("тЬЕ ржпрзБржХрзНржд ржХрж░рзБржи")

    if insert_btn:
        if name and grade:
            cursor.execute("INSERT INTO students (name, age, grade) VALUES (?, ?, ?)", (name, age, grade))
            conn.commit()
            st.success(f"ЁЯОЙ {name} ржХрзЗ рж╕ржлрж▓ржнрж╛ржмрзЗ ржпрзБржХрзНржд ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ!")
        else:
            st.error("тЭМ ржирж╛ржо ржУ ржЧрзНрж░рзЗржб ржЕржмрж╢рзНржпржЗ ржкрзВрж░ржг ржХрж░рзБржи!")

''', language="bash")

with st.expander("ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрзБржи"):
    st.subheader("ржЙржкрж░рзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржмрзНржпрж╛ржЦрзНржпрж╛")

    st.write("""ЁЯФ╣ рзз. with st.form("insert_form"):
             
        ЁЯСЙ ржПржЯрж┐ ржПржХржЯрж┐ ржлрж░рзНржо рждрзИрж░рж┐ ржХрж░рзЗ ржпрж╛рж░ ржЖржЗржбрж┐ "insert_form"ред
        ЁЯСЙ ржПржЗ ржлрж░рзНржорзЗрж░ ржоржзрзНржпрзЗ ржерж╛ржХрж╛ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржб ржУ ржмрж╛ржЯржи ржПржХрж╕рж╛ржерзЗ рж╕рж╛ржмржорж┐ржЯ рж╣рзЯред

    ЁЯФ╣ рзи. st.subheader("тЮХ ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзБржи")
        ЁЯСЙ ржлрж░рзНржорзЗрж░ ржЙржкрж░рзЗ ржПржХржЯрж┐ рж╕рж╛ржмрж╣рзЗржбрж╛рж░ ржжрзЗржЦрж╛рзЯ: "тЮХ ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзБржи"ред

    ЁЯФ╣ рзй. name = st.text_input("ржирж╛ржо")
        ЁЯСЙ ржЫрж╛рждрзНрж░рзЗрж░ ржирж╛ржо ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржЯрзЗржХрзНрж╕ржЯ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржб ржжрзЗржЦрж╛рзЯред

    ЁЯФ╣ рзк. age = st.number_input("ржмрзЯрж╕", min_value=1, max_value=100)
        ЁЯСЙ ржмрзЯрж╕ ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржирж╛ржорзНржмрж╛рж░ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржб ржжрзЗржЦрж╛рзЯред
        ЁЯСЙ ржмрзЯрж╕рзЗрж░ ржорж╛ржи ржЕржмрж╢рзНржпржЗ рзз ржерзЗржХрзЗ рззрзжрзж ржПрж░ ржоржзрзНржпрзЗ рж╣рждрзЗ рж╣ржмрзЗред

    ЁЯФ╣ рзл. grade = st.text_input("ржЧрзНрж░рзЗржб (A+/B/C...)")
        ЁЯСЙ ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛рж░ ржЬржирзНржп ржЖрж░рзЗржХржЯрж┐ ржЯрзЗржХрзНрж╕ржЯ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбред

    ЁЯФ╣ рзм. insert_btn = st.form_submit_button("тЬЕ ржпрзБржХрзНржд ржХрж░рзБржи")
        ЁЯСЙ ржлрж░рзНржо рж╕рж╛ржмржорж┐ржЯ ржХрж░рж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ рж╕рж╛ржмржорж┐ржЯ ржмрж╛ржЯржи ржжрзЗржЦрж╛рзЯред
        ЁЯСЙ ржХрзНрж▓рж┐ржХ ржХрж░рж▓рзЗ ржлрж░рзНржорзЗрж░ ржбрзЗржЯрж╛ ржкрзНрж░ржХрзНрж░рж┐рзЯрж╛ рж╣рзЯред

    ЁЯФ╣ рзн. if insert_btn:
        ЁЯСЙ ржЪрзЗржХ ржХрж░рзЗ рж╕рж╛ржмржорж┐ржЯ ржмрж╛ржЯржи ржХрзНрж▓рж┐ржХ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ ржХрж┐ржирж╛ред

    ЁЯФ╣ рзо. if name and grade:
        ЁЯСЙ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзЗ ржпрзЗ ржирж╛ржо ржУ ржЧрзНрж░рзЗржб ржлрж╛ржБржХрж╛ ржирзЯред
        ЁЯСЙ ржмрзЯрж╕ ржмрж╛ржзрзНржпрждрж╛ржорзВрж▓ржХ ржирж╛, ржХрж╛рж░ржг рждрж╛ number_input ржерзЗржХрзЗржЗ ржорж┐ржирж┐ржорж╛ржо рзз рж╣рзЯред

    ЁЯФ╣ рзп. cursor.execute("INSERT INTO students (name, age, grade) VALUES (?, ?, ?)", (name, age, grade))
        ЁЯСЙ ржбрзЗржЯрж╛ржмрзЗрж╕рзЗ ржЫрж╛рждрзНрж░рзЗрж░ рждржерзНржп insert (ржпрзЛржЧ) ржХрж░рзЗред
        ЁЯСЙ ? ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ SQL injection ржерзЗржХрзЗ ржирж┐рж░рж╛ржкржж ржерж╛ржХрж╛рж░ ржЬржирзНржпред

    ЁЯФ╣ рззрзж. conn.commit()
        ЁЯСЙ ржбрзЗржЯрж╛ рж╕рзНржерж╛рзЯрзАржнрж╛ржмрзЗ рж╕ржВрж░ржХрзНрж╖ржг (save) ржХрж░рзЗ ржбрзЗржЯрж╛ржмрзЗрж╕рзЗред

    ЁЯФ╣ рззрзз. st.success(f"ЁЯОЙ {name} ржХрзЗ рж╕ржлрж▓ржнрж╛ржмрзЗ ржпрзБржХрзНржд ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ!")
        ЁЯСЙ рж╕ржлрж▓ рж╣рж▓рзЗ рж╕рзНржХрзНрж░рж┐ржирзЗ рж╕ржмрзБржЬ тЬЕ ржмрж╛рж░рзНрждрж╛ ржжрзЗржЦрж╛рзЯред

    ЁЯФ╣ рззрзи. else: st.error("тЭМ ржирж╛ржо ржУ ржЧрзНрж░рзЗржб ржЕржмрж╢рзНржпржЗ ржкрзВрж░ржг ржХрж░рзБржи!")
        ЁЯСЙ ржпржжрж┐ ржирж╛ржо ржмрж╛ ржЧрзНрж░рзЗржб ржлрж╛ржБржХрж╛ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ рждрзНрж░рзБржЯрж┐ ржмрж╛рж░рзНрждрж╛ ржжрзЗржЦрж╛рзЯред""")
  


st.title("ЁЯОУ ржЫрж╛рждрзНрж░ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛ ржЕрзНржпрж╛ржк")

with st.form("insert_form"):
    st.subheader("тЮХ ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзБржи")
    name = st.text_input("ржирж╛ржо")
    age = st.number_input("ржмрзЯрж╕", min_value=1, max_value=100)
    grade = st.text_input("ржЧрзНрж░рзЗржб (A+/B/C...)")
    insert_btn = st.form_submit_button("тЬЕ ржпрзБржХрзНржд ржХрж░рзБржи")

    if insert_btn:
        if name and grade:
            cursor.execute("INSERT INTO students (name, age, grade) VALUES (?, ?, ?)", (name, age, grade))
            conn.commit()
            st.success(f"ЁЯОЙ {name} ржХрзЗ рж╕ржлрж▓ржнрж╛ржмрзЗ ржпрзБржХрзНржд ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ!")
        else:
            st.error("тЭМ ржирж╛ржо ржУ ржЧрзНрж░рзЗржб ржЕржмрж╢рзНржпржЗ ржкрзВрж░ржг ржХрж░рзБржи!")



#ржбрзЗржЯрж╛ ржкрзЬрж╛ (Read)
st.subheader("рзз.рзй ржбрзЗржЯрж╛ ржкрзЬрж╛ (Read)")

st.text('ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ')

st.code('''st.subheader("ЁЯУЛ ржЫрж╛рждрзНрж░ рждрж╛рж▓рж┐ржХрж╛")

cursor.execute("SELECT * FROM students")
rows = cursor.fetchall()

if rows:
    for row in rows:
        st.markdown(f"ЁЯзСтАНЁЯОУ **{row[0]} | {row[1]} | ржмрзЯрж╕: {row[2]} | ржЧрзНрж░рзЗржб: {row[3]}**")
else:
    st.info("ЁЯЩБ ржХрзЛржирзЛ ржЫрж╛рждрзНрж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред")

''', language="bash")

with st.expander("ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрзБржи"):
    st.subheader("ржЙржкрж░рзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржмрзНржпрж╛ржЦрзНржпрж╛")

    st.write("""
    ЁЯФ╣ рзз. cursor.execute("SELECT * FROM students") 
              
        ЁЯСЙ SQLite ржбрзЗржЯрж╛ржмрзЗрж╕ ржерзЗржХрзЗ students ржЯрзЗржмрж┐рж▓рзЗрж░ рж╕ржорж╕рзНржд рж░рзЗржХрж░рзНржб (рж╕рж╛рж░рж┐) ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рж╛рж░ ржЬржирзНржп SQL ржХржорж╛ржирзНржб ржЪрж╛рж▓рж╛ржирзЛ рж╣ржпрж╝ред
        ЁЯСЙ SELECT * ржорж╛ржирзЗ рж╕ржм ржХрж▓рж╛ржорж╕рж╣ рж╕ржм ржбрзЗржЯрж╛ ржЖржирж╛ рж╣ржмрзЗред

    ЁЯФ╣ рзи. rows = cursor.fetchall()  
               
        ЁЯСЙ ржЙржкрж░рзЗрж░ SQL ржХржорж╛ржирзНржбрзЗрж░ ржлрж▓рж╛ржлрж▓ рж╕ржм рж╕рж╛рж░рж┐ ржирж┐рзЯрзЗ ржЖрж╕рзЗ ржПржмржВ rows ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓рзЗ ржПржХржЯрж┐ рждрж╛рж▓рж┐ржХрж╛ рж╣рж┐рж╕рзЗржмрзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗред
        ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ row ржПржХржЯрж┐ ржЯрж╛ржкрж▓, ржпрзЗржЦрж╛ржирзЗ ржкрзНрж░ржержо ржорж╛ржи id, ржжрзНржмрж┐рждрзАржпрж╝ name, рждрзГрждрзАржпрж╝ age ржПржмржВ ржЪрждрзБрж░рзНрже gradeред

    ЁЯФ╣ рзй. if rows: 
             
        ЁЯСЙ ржЪрзЗржХ ржХрж░рзЗ ржпрзЗ ржбрзЗржЯрж╛ржмрзЗрж╕ ржерзЗржХрзЗ ржХрзЛржирзЛ рж░рзЗржХрж░рзНржб ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ ржХрж┐ржирж╛ред
        ЁЯСЙ ржпржжрж┐ rows ржЦрж╛рж▓рж┐ ржирж╛ рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ рж╕рждрзНржп (True) рж╣ржмрзЗред

    ЁЯФ╣ рзк. for row in rows:  
             
        ЁЯСЙ ржкрж╛ржУржпрж╝рж╛ рж╕ржорж╕рзНржд рж░рзЗржХрж░рзНржбрзЗрж░ ржоржзрзНржпрзЗ рж▓рзБржк ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржПржХ ржПржХ ржХрж░рзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржЫрж╛рждрзНрж░рзЗрж░ рждржерзНржп ржирж┐ржпрж╝рзЗ ржЖрж╕рзЗред

    ЁЯФ╣ рзл. st.markdown(f"ЁЯзСтАНЁЯОУ **{row[0]} | {row[1]} | ржмрзЯрж╕: {row[2]} | ржЧрзНрж░рзЗржб: {row[3]}**")
             
        ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ ржЫрж╛рждрзНрж░рзЗрж░ рждржерзНржп Markdown ржлрж░ржорзНржпрж╛ржЯрзЗ рж╕рзНржЯрзНрж░рж┐ржорж▓рж┐ржЯ ржЕрзНржпрж╛ржкрзЗ ржкрзНрж░ржжрж░рзНрж╢ржи ржХрж░рзЗред
        ЁЯСЙ {row[0]} тЖТ ржЫрж╛рждрзНрж░рзЗрж░ id
        ЁЯСЙ {row[1]} тЖТ ржЫрж╛рждрзНрж░рзЗрж░ name
        ЁЯСЙ {row[2]} тЖТ ржЫрж╛рждрзНрж░рзЗрж░ age
        ЁЯСЙ {row[3]} тЖТ ржЫрж╛рждрзНрж░рзЗрж░ grade
        ЁЯСЙ ржЙржжрж╛рж╣рж░ржг: ЁЯзСтАНЁЯОУ 1 | рж░рж╛ржХрж┐ржм | ржмрзЯрж╕: 15 | ржЧрзНрж░рзЗржб: A+

    ЁЯФ╣ рзм. else:
             
        ЁЯСЙ ржпржжрж┐ rows ржЦрж╛рж▓рж┐ рж╣ржпрж╝, ржЕрж░рзНржерж╛рзО ржХрзЛржирзЛ ржЫрж╛рждрзНрж░рзЗрж░ рждржерзНржп ржирж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝, рждрж╛рж╣рж▓рзЗ ржирж┐ржЪрзЗрж░ ржмрж╛рж░рзНрждрж╛ ржжрзЗржЦрж╛ржмрзЗред

    ЁЯФ╣рзн. st.info("ЁЯЩБ ржХрзЛржирзЛ ржЫрж╛рждрзНрж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред")
             
        ЁЯСЙ рждржерзНржп ржЬрж╛ржирж╛рждрзЗ ржПржХржЯрж┐ ржирзАрж▓ рж░ржЩрзЗрж░ рждржерзНржпржмрж╛рж░рзНрждрж╛ ржжрзЗржЦрж╛ржпрж╝, ржпрзЗржЦрж╛ржирзЗ рж▓рзЗржЦрж╛ ржерж╛ржХржмрзЗ "ЁЯЩБ ржХрзЛржирзЛ ржЫрж╛рждрзНрж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред"
        ЁЯСЙ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржЬрж╛ржирж╛ржпрж╝ ржпрзЗ ржбрж╛ржЯрж╛ржмрзЗрж╕рзЗ ржХрзЛржирзЛ ржЫрж╛рждрзНрж░рзЗрж░ рждржерзНржп ржирзЗржЗред

""")

st.subheader("ЁЯУЛ ржЫрж╛рждрзНрж░ рждрж╛рж▓рж┐ржХрж╛")

cursor.execute("SELECT * FROM students")
rows = cursor.fetchall()

if rows:
    for row in rows:
        st.markdown(f"ЁЯзСтАНЁЯОУ **{row[0]} | {row[1]} | ржмрзЯрж╕: {row[2]} | ржЧрзНрж░рзЗржб: {row[3]}**")
else:
    st.info("ЁЯЩБ ржХрзЛржирзЛ ржЫрж╛рждрзНрж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред")




st.subheader("рзз.рзк ржбрзЗржЯрж╛ ржЖржкржбрзЗржЯ (Update) ржУ ржбрж┐рж▓рж┐ржЯ (Delete)")
st.text('ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ')

st.code(''' # Session state ржжрж┐рзЯрзЗ ржЖржкржбрзЗржЯ ID ржзрж░рзЗ рж░рж╛ржЦрзЛ
if "update_id" not in st.session_state:
    st.session_state.update_id = None

for row in rows:
    st.markdown(f"ЁЯзСтАНЁЯОУ **{row[0]} | {row[1]} | ржмрзЯрж╕: {row[2]} | ржЧрзНрж░рзЗржб: {row[3]}**")
    col1, col2 = st.columns(2)

    with col1:
        if st.button(f"тЬПя╕П ржЖржкржбрзЗржЯ ржХрж░рзБржи (ID: {row[0]})", key=f"update_btn_{row[0]}"):
            st.session_state.update_id = row[0]  # ржХрзЛржи ID ржЖржкржбрзЗржЯ рж╣ржмрзЗ, рж╕рзЗржЯрж┐ рж░рж╛ржЦрзЛ

    with col2:
        if st.button(f"ЁЯЧСя╕П ржбрж┐рж▓рж┐ржЯ ржХрж░рзБржи (ID: {row[0]})", key=f"delete_btn_{row[0]}"):
            cursor.execute("DELETE FROM students WHERE id = ?", (row[0],))
            conn.commit()
            st.warning(f"тЪая╕П ID {row[0]} ржбрж┐рж▓рж┐ржЯ рж╣рзЯрзЗржЫрзЗ!")
            st.rerun()

    # ржпржжрж┐ ржПржЗ ID ржЖржкржбрзЗржЯ ржорзЛржбрзЗ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ text input ржжрзЗржЦрж╛ржУ
    if st.session_state.update_id == row[0]:
        new_grade = st.text_input(f"ЁЯФБ ржирждрзБржи ржЧрзНрж░рзЗржб (ID: {row[0]})", key=f"new_grade_{row[0]}")
        if st.button(f"ЁЯТ╛ ржЧрзНрж░рзЗржб рж╕рзЗржн ржХрж░рзБржи (ID: {row[0]})", key=f"save_grade_{row[0]}"):
            if new_grade:
                cursor.execute("UPDATE students SET grade = ? WHERE id = ?", (new_grade, row[0]))
                conn.commit()
                st.success(f"тЬЕ ID {row[0]} ржПрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ рж╣рзЯрзЗржЫрзЗ!")
                st.session_state.update_id = None  # ржЖржкржбрзЗржЯ ржорзЛржб ржмржирзНржз ржХрж░рзЛ
                st.rerun()

''', language="bash")

with st.expander("ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрзБржи"):
    st.subheader("ржЙржкрж░рзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржмрзНржпрж╛ржЦрзНржпрж╛")
    st.write("""тЬЕ session_state ржжрж┐рзЯрзЗ ржЖржкржбрзЗржЯ ID ржзрж░рзЗ рж░рж╛ржЦрж╛
                 
    ЁЯФ╣ рзз. if "update_id" not in st.session_state:
                 
        ЁЯСЙ ржЪрзЗржХ ржХрж░рзЗ update_id ржирж╛ржорзЗ ржХрзЛржирзЛ ржХрзА session-ржП ржЖржЫрзЗ ржХрж┐ржирж╛ред
        ЁЯСЙ ржирж╛ ржерж╛ржХрж▓рзЗ ржирждрзБржи ржХрж░рзЗ рждрзИрж░рж┐ ржХрж░рзЗ ржирж┐ржЪрзЗрж░ рж▓рж╛ржЗржирзЗред

    ЁЯФ╣ рзи. st.session_state.update_id = None
                 
        ЁЯСЙ ржЖржкржбрзЗржЯ ржХрж░рж╛рж░ ржЬржирзНржп ржпрзЗ student-ржПрж░ ID ржзрж░рждрзЗ рж╣ржмрзЗ рждрж╛ рж╢рзБрж░рзБрждрзЗ None ржХрж░рзЗ ржжрзЗржУрзЯрж╛ рж╣рзЯред

    тЬЕ ржкрзНрж░рждрж┐ржЯрж┐ ржЫрж╛рждрзНрж░рзЗрж░ рждржерзНржп ржжрзЗржЦрж╛ржирзЛ ржПржмржВ ржЖржкржбрзЗржЯ/ржбрж┐рж▓рж┐ржЯ ржЕржкрж╢ржи ржпрзБржХрзНржд ржХрж░рж╛
    ЁЯФ╣ рзй. for row in rows:
                 
        ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ ржЫрж╛рждрзНрж░рзЗрж░ ржЬржирзНржп рж▓рзБржк ржЪрж╛рж▓рж╛ржирзЛ рж╣ржЪрзНржЫрзЗред

    ЁЯФ╣ рзк. st.markdown(...)
                 
        ЁЯСЙ ржЫрж╛рждрзНрж░рзЗрж░ ID, ржирж╛ржо, ржмрзЯрж╕, ржПржмржВ ржЧрзНрж░рзЗржб ржжрзЗржЦрж╛рзЯред
        ЁЯСЙ ржЙржжрж╛рж╣рж░ржг: ЁЯзСтАНЁЯОУ 1 | рж░рж╛рж╣рзБрж▓ | ржмрзЯрж╕: 17 | ржЧрзНрж░рзЗржб: A+

    ЁЯФ╣ рзл. col1, col2 = st.columns(2)
                 
        ЁЯСЙ ржжрзБржЗржЯрж┐ ржХрж▓рж╛ржо рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯтАФржПржХржЯрж┐рждрзЗ ржЖржкржбрзЗржЯ ржмрж╛ржЯржи, ржЕржирзНржпржЯрж┐рждрзЗ ржбрж┐рж▓рж┐ржЯ ржмрж╛ржЯржи ржерж╛ржХржмрзЗред

    тЬЕ ржЖржкржбрзЗржЯ ржмрж╛ржЯржирзЗрж░ ржХрж╛рж░рзНржпржХрзНрж░ржо
                 
    ЁЯФ╣ рзм. if st.button(..., key=f"update_btn_{row[0]}"):
                 
        ЁЯСЙ ржпржжрж┐ ржЖржкржбрзЗржЯ ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж╛ рж╣рзЯ, рждрж╛рж╣рж▓рзЗ рж╕рзЗржЗ ржЫрж╛рждрзНрж░рзЗрж░ ID session_state.update_id ржП рж░рж╛ржЦрж╛ рж╣рзЯред

    тЬЕ ржбрж┐рж▓рж┐ржЯ ржмрж╛ржЯржирзЗрж░ ржХрж╛рж░рзНржпржХрзНрж░ржо
                 
    ЁЯФ╣ рзн. if st.button(..., key=f"delete_btn_{row[0]}"):
             
            ЁЯСЙ ржпржжрж┐ ржбрж┐рж▓рж┐ржЯ ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ рж╣рзЯ:
            тЬЕ рж╕рзЗржЗ ржЫрж╛рждрзНрж░рзЗрж░ ID ржЕржирзБржпрж╛рзЯрзА DELETE FROM students ржЪрж╛рж▓рж╛ржирзЛ рж╣рзЯред
            тЬЕ conn.commit() ржжрж┐рзЯрзЗ ржЪрж┐рж░рждрж░рзЗ ржорзБржЫрзЗ ржлрзЗрж▓рж╛ рж╣рзЯред
            тЬЕ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржжрзЗржЦрж╛ржирзЛ рж╣рзЯ ржпрзЗ ржПржЗ ID ржбрж┐рж▓рж┐ржЯ рж╣рзЯрзЗржЫрзЗред
            тЬЕ st.rerun() ржжрж┐рзЯрзЗ ржЕрзНржпрж╛ржкржЯрж┐ ржЖржмрж╛рж░ ржЪрж╛рж▓рж╛ржирзЛ рж╣рзЯ ржпрж╛рждрзЗ ржкрж░рж┐ржмрж░рзНрждржи рж╕ржЩрзНржЧрзЗ рж╕ржЩрзНржЧрзЗ ржжрзЗржЦрж╛ ржпрж╛рзЯред

    тЬЕ ржЖржкржбрзЗржЯ ржорзЛржбрзЗ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржб ржжрзЗржЦрж╛ржирзЛ
                 
    ЁЯФ╣ рзо. if st.session_state.update_id == row[0]:
        ЁЯСЙ ржпржжрж┐ ржПржЗ ржЫрж╛рждрзНрж░ржЯрж┐рж░ ID ржмрж░рзНрждржорж╛ржирзЗ ржЖржкржбрзЗржЯ ржорзЛржбрзЗ ржерж╛ржХрзЗ, рждржЦржи ржЗржиржкрзБржЯ ржмржХрзНрж╕ ржжрзЗржЦрж╛ржирзЛ рж╣рзЯред

    ЁЯФ╣ рзп. new_grade = st.text_input(...)
                 
        ЁЯСЙ ржЫрж╛рждрзНрж░рзЗрж░ ржЬржирзНржп ржирждрзБржи ржЧрзНрж░рзЗржб ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛рж░ ржмржХрзНрж╕ред

    ЁЯФ╣ рззрзж. if st.button(...):
                 
        ЁЯСЙ "ржЧрзНрж░рзЗржб рж╕рзЗржн ржХрж░рзБржи" ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж▓рзЗ:
        тЬЕ UPDATE students SET grade = ? WHERE id = ? SQL ржЪрж╛рж▓рж╛ржирзЛ рж╣рзЯред
        тЬЕ ржирждрзБржи ржЧрзНрж░рзЗржб рж╕ржВрж░ржХрзНрж╖ржг рж╣рзЯред
        тЬЕ рж╕ржлрж▓ ржмрж╛рж░рзНрждрж╛ ржжрзЗржЦрж╛ржирзЛ рж╣рзЯред
        тЬЕ update_id ржЖржмрж╛рж░ None ржХрж░рзЗ ржжрзЗржУрзЯрж╛ рж╣рзЯ (ржЕрж░рзНржерж╛рзО ржЖржкржбрзЗржЯ ржорзЛржб ржерзЗржХрзЗ ржмрзЗрж░ рж╣ржУрзЯрж╛)ред
        тЬЕ st.rerun() ржжрж┐рзЯрзЗ ржкрзЗржЬ рж░рж┐ржлрзНрж░рзЗрж╢ рж╣рзЯ ржпрж╛рждрзЗ ржЖржкржбрзЗржЯ ржжрзЗржЦрж╛ ржпрж╛рзЯред
    """)
    
    

# Session state ржжрж┐рзЯрзЗ ржЖржкржбрзЗржЯ ID ржзрж░рзЗ рж░рж╛ржЦрзЛ
if "update_id" not in st.session_state:
    st.session_state.update_id = None

for row in rows:
    st.markdown(f"ЁЯзСтАНЁЯОУ **{row[0]} | {row[1]} | ржмрзЯрж╕: {row[2]} | ржЧрзНрж░рзЗржб: {row[3]}**")
    col1, col2 = st.columns(2)

    with col1:
        if st.button(f"тЬПя╕П ржЖржкржбрзЗржЯ ржХрж░рзБржи (ID: {row[0]})", key=f"update_btn_{row[0]}"):
            st.session_state.update_id = row[0]  # ржХрзЛржи ID ржЖржкржбрзЗржЯ рж╣ржмрзЗ, рж╕рзЗржЯрж┐ рж░рж╛ржЦрзЛ

    with col2:
        if st.button(f"ЁЯЧСя╕П ржбрж┐рж▓рж┐ржЯ ржХрж░рзБржи (ID: {row[0]})", key=f"delete_btn_{row[0]}"):
            cursor.execute("DELETE FROM students WHERE id = ?", (row[0],))
            conn.commit()
            st.warning(f"тЪая╕П ID {row[0]} ржбрж┐рж▓рж┐ржЯ рж╣рзЯрзЗржЫрзЗ!")
            st.rerun()

    # ржпржжрж┐ ржПржЗ ID ржЖржкржбрзЗржЯ ржорзЛржбрзЗ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ text input ржжрзЗржЦрж╛ржУ
    if st.session_state.update_id == row[0]:
        new_grade = st.text_input(f"ЁЯФБ ржирждрзБржи ржЧрзНрж░рзЗржб (ID: {row[0]})", key=f"new_grade_{row[0]}")
        if st.button(f"ЁЯТ╛ ржЧрзНрж░рзЗржб рж╕рзЗржн ржХрж░рзБржи (ID: {row[0]})", key=f"save_grade_{row[0]}"):
            if new_grade:
                cursor.execute("UPDATE students SET grade = ? WHERE id = ?", (new_grade, row[0]))
                conn.commit()
                st.success(f"тЬЕ ID {row[0]} ржПрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ рж╣рзЯрзЗржЫрзЗ!")
                st.session_state.update_id = None  # ржЖржкржбрзЗржЯ ржорзЛржб ржмржирзНржз ржХрж░рзЛ
                st.rerun()

st.subheader("""ржЖржЬ ржЖржорж░рж╛ рж╢рж┐ржЦржмрзЛ ржХрж┐ржнрж╛ржмрзЗ Python ржжрж┐рзЯрзЗ MySQL ржбрзЗржЯрж╛ржмрзЗрж╕рзЗ рж╕ржВржпрзЛржЧ ржХрж░рждрзЗ рж╣рзЯ, ржбрзЗржЯрж╛ ржпрзЛржЧ, ржкрзЬрж╛, ржЖржкржбрзЗржЯ ржПржмржВ ржбрж┐рж▓рж┐ржЯ (CRUD ржЕржкрж╛рж░рзЗрж╢ржи) ржХрж░рждрзЗ рж╣рзЯред 
             ржПржХржжржо рж╢рзБрж░рзБ ржерзЗржХрзЗ, ржЗржирж╕рзНржЯрж▓рзЗрж╢ржи ржерзЗржХрзЗ ржХрзЛржб ржЙржжрж╛рж╣рж░ржг ржкрж░рзНржпржирзНржд ржмрж┐рж╕рзНрждрж╛рж░рж┐рждржнрж╛ржмрзЗ!""")

st.subheader("""ржзрж╛ржк рзз: ржХрзА ржХрзА рж▓рж╛ржЧржмрзЗ?
рждрзЛржорж╛рж░ ржкрзНрж░рзЯрзЛржЬржи рж╣ржмрзЗ:
             
| ржЬрж┐ржирж┐рж╕                         | ржЙржжрзНржжрзЗрж╢рзНржп                                             |
|------------------------------|------------------------------------------------------|
| Python                       | ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржнрж╛рж╖рж╛                                     |
| MySQL Server                 | ржбрзЗржЯрж╛ржмрзЗрж╕ ржЪрж╛рж▓рж╛ржирзЛрж░ ржЬржирзНржп                                |
| `mysql-connector-python` рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ | Python ржЖрж░ MySQL-ржПрж░ ржоржзрзНржпрзЗ рж╕ржВржпрзЛржЧ рж╕рзНржерж╛ржкржирзЗрж░ ржЬржирзНржп        |
""")

st.subheader("""тЬЕ ржзрж╛ржк рзи: ржЗржирж╕рзНржЯрж▓рзЗрж╢ржи
             
ЁЯФ╕ MySQL Server ржЗржирж╕рзНржЯрж▓ ржХрж░рзЛ (ржпрзЗржоржиржГ XAMPP)
             
XAMPP ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзЛ

XAMPP ржЗржирж╕рзНржЯрж▓ ржХрж░рзЗ ржЪрж╛рж▓рж╛ржУ

XAMPP Control Panel ржерзЗржХрзЗ MySQL ржЪрж╛рж▓рзБ ржХрж░рзЛ

phpMyAdmin ржЦрзБрж▓рзЛ: http://localhost/phpmyadmin""")

st.subheader("ЁЯФ╕ Python рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржЗржирж╕рзНржЯрж▓ ржХрж░рзЛ")

st.code("""
ржЯрж╛рж░рзНржорж┐ржирж╛рж▓рзЗ ржирж┐ржЪрзЗрж░ ржХржорж╛ржирзНржб ржЪрж╛рж▓рж╛ржУ:


pip install mysql-connector-python
""", language="bash")


st.write("ржПржЯрж┐ mysql.connector ржирж╛ржорзЗ ржПржХржЯрж┐ рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржЗржирж╕рзНржЯрж▓ ржХрж░ржмрзЗ ржпрж╛ ржжрж┐рзЯрзЗ Python MySQL-ржП рж╕ржВржпрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░рзЗред")


st.subheader("""ржзрж╛ржк рзй: ржбрзЗржЯрж╛ржмрзЗрж╕ рждрзИрж░рж┐ (phpMyAdmin)
             
phpMyAdmin ржП ржпрж╛ржУ (http://localhost/phpmyadmin)

ржмрж╛ржо ржкрж╛рж╢рзЗ "New" ржП ржХрзНрж▓рж┐ржХ ржХрж░рзЛ

ржбрзЗржЯрж╛ржмрзЗрж╕рзЗрж░ ржирж╛ржо ржжрж╛ржУ: students_db

ржПрж░ржкрж░ ржирж┐ржЪрзЗрж░ SQL ржХржорж╛ржирзНржбржЯрж┐ ржЪрж╛рж▓рж╛ржУ:""")


st.markdown('<p style="font-size:12px;">ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ</p>', unsafe_allow_html=True)
st.code("""CREATE TABLE students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    age INT,
    grade VARCHAR(10)
);
""", language="bash")
st.markdown('<p style="font-size:12px;">ржПржЯрж┐ ржПржХржЯрж┐ students ржирж╛ржорзЗ ржЯрзЗржмрж┐рж▓ рждрзИрж░рж┐ ржХрж░ржмрзЗ ржпрзЗржЦрж╛ржирзЗ id, name, age, ржУ grade ржерж╛ржХржмрзЗред</p>', unsafe_allow_html=True)



st.subheader("""ржзрж╛ржк рзк: ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ ржлрж╛ржВрж╢ржи
             
ЁЯФ╣ connect_mysql.py ржирж╛ржорзЗ ржПржХржЯрж┐ ржлрж╛ржЗрж▓ рждрзИрж░рж┐ ржХрж░рзЛ:""")


st.markdown('<p style="font-size:12px;">ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ</p>', unsafe_allow_html=True)
st.code("""import mysql.connector

def get_connection():
    conn = mysql.connector.connect(
        host="localhost",
        user="root",
        password="",
        database="students_db"
    )
    return conn

""", language="bash")


st.subheader("ржзрж╛ржк рзл: ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи (Insert)")

st.markdown('<p style="font-size:12px;">ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ</p>', unsafe_allow_html=True)
st.code("""def add_student(name, age, grade):
    conn = get_connection()
    cursor = conn.cursor()
    query = "INSERT INTO students (name, age, grade) VALUES (%s, %s, %s)"
    cursor.execute(query, (name, age, grade))
    conn.commit()
    cursor.close()
    conn.close()
""", language="bash")


st.subheader("ржзрж╛ржк рзм: рж╕ржм ржЫрж╛рждрзНрж░ ржжрзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи (Select)")

st.markdown('<p style="font-size:12px;">ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ</p>', unsafe_allow_html=True)
st.code("""def get_all_students():
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM students")
    rows = cursor.fetchall()
    cursor.close()
    conn.close()
    return rows

""", language="bash")


st.subheader("ржзрж╛ржк рзн: ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи (Update)")

st.markdown('<p style="font-size:12px;">ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ</p>', unsafe_allow_html=True)
st.code("""def update_student_grade(student_id, new_grade):
    conn = get_connection()
    cursor = conn.cursor()
    query = "UPDATE students SET grade = %s WHERE id = %s"
    cursor.execute(query, (new_grade, student_id))
    conn.commit()
    cursor.close()
    conn.close()

""", language="bash")



st.subheader("ржзрж╛ржк рзо: ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рж╛рж░ ржлрж╛ржВрж╢ржи (Delete)")

st.markdown('<p style="font-size:12px;">ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ</p>', unsafe_allow_html=True)
st.code("""def delete_student(student_id):
    conn = get_connection()
    cursor = conn.cursor()
    query = "DELETE FROM students WHERE id = %s"
    cursor.execute(query, (student_id,))
    conn.commit()
    cursor.close()
    conn.close()


""", language="bash")


st.subheader("ржкрзБрж░рзЛ ржХрзЛржб (рж╕ржВржХрзНрж╖рзЗржкрзЗ)")

st.markdown('<p style="font-size:12px;">ржирж┐ржЪрзЗрж░ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЛ</p>', unsafe_allow_html=True)
st.code("""import streamlit as st
import mysql.connector

# тЬЕ ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ
conn = mysql.connector.connect(
    host="localhost",
    user="root",
    password="",
    database="students_db"
)
cursor = conn.cursor()

st.title("ЁЯУЪ ржЫрж╛рждрзНрж░ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛ рж╕рж┐рж╕рзНржЯрзЗржо")

menu = st.selectbox("ЁЯУМ ржЕржкрж╢ржи ржмрзЗржЫрзЗ ржирж╛ржУ", ["ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзЛ", "рж╕ржм ржЫрж╛рждрзНрж░ ржжрзЗржЦрж╛ржУ", "ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рзЛ", "ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ"])

# тЬЕ рзз. ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзЛ
if menu == "ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзЛ":
    st.subheader("тЮХ ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзЛ")
    with st.form("add_form"):
        name = st.text_input("ЁЯСд ржирж╛ржо")
        age = st.number_input("ЁЯУЕ ржмрзЯрж╕", min_value=1, step=1)
        grade = st.selectbox("ЁЯОУ ржЧрзНрж░рзЗржб", ["A", "B", "C", "D", "F"])
        submit = st.form_submit_button("тЬЕ ржпрзЛржЧ ржХрж░рзЛ")
    if submit:
        if name:
            cursor.execute("INSERT INTO students (name, age, grade) VALUES (%s, %s, %s)", (name, age, grade))
            conn.commit()
            st.success("тЬЕ ржЫрж╛рждрзНрж░ рж╕ржлрж▓ржнрж╛ржмрзЗ ржпрзЛржЧ рж╣рзЯрзЗржЫрзЗ!")
        else:
            st.error("тЭЧ ржирж╛ржо рж▓рж┐ржЦрждрзЗ рж╣ржмрзЗред")

# тЬЕ рзи. рж╕ржм ржЫрж╛рждрзНрж░ ржжрзЗржЦрж╛ржУ
elif menu == "рж╕ржм ржЫрж╛рждрзНрж░ ржжрзЗржЦрж╛ржУ":
    st.subheader("ЁЯУД ржЫрж╛рждрзНрж░ рждрж╛рж▓рж┐ржХрж╛")
    cursor.execute("SELECT * FROM students")
    rows = cursor.fetchall()
    if rows:
        st.table(rows)
    else:
        st.info("тЪая╕П ржХрзЛржирзЛ ржЫрж╛рждрзНрж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред")

# тЬЕ рзй. ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рзЛ
elif menu == "ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рзЛ":
    st.subheader("ЁЯФБ ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рзЛ")
    cursor.execute("SELECT id, name FROM students")
    students = cursor.fetchall()
    student_dict = {f"{name} (ID: {sid})": sid for sid, name in students}
    selected_student = st.selectbox("ЁЯСд ржЫрж╛рждрзНрж░ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзЛ", list(student_dict.keys()))
    new_grade = st.selectbox("ЁЯЖХ ржирждрзБржи ржЧрзНрж░рзЗржб", ["A", "B", "C", "D", "F"])
    if st.button("тЬЕ ржЖржкржбрзЗржЯ ржХрж░рзЛ"):
        sid = student_dict[selected_student]
        cursor.execute("UPDATE students SET grade = %s WHERE id = %s", (new_grade, sid))
        conn.commit()
        st.success("ЁЯОЙ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ рж╣рзЯрзЗржЫрзЗ!")

# тЬЕ рзк. ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ
elif menu == "ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ":
    st.subheader("ЁЯЧСя╕П ржЫрж╛рждрзНрж░ ржбрж┐рж▓рж┐ржЯ ржХрж░рзЛ")
    cursor.execute("SELECT id, name FROM students")
    students = cursor.fetchall()
    student_dict = {f"{name} (ID: {sid})": sid for sid, name in students}
    selected_student = st.selectbox("тЭМ ржпрзЗржЗ ржЫрж╛рждрзНрж░ ржорзБржЫрждрзЗ ржЪрж╛ржУ", list(student_dict.keys()))
    if st.button("тЪая╕П ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ"):
        sid = student_dict[selected_student]
        cursor.execute("DELETE FROM students WHERE id = %s", (sid,))
        conn.commit()
        st.warning("ЁЯЧСя╕П ржЫрж╛рждрзНрж░ ржбрж┐рж▓рж┐ржЯ рж╣рзЯрзЗржЫрзЗ!")

# тЬЕ рж╕ржВржпрзЛржЧ ржмржирзНржз
cursor.close()
conn.close()


""", language="bash")


st.subheader("ржПржЦрж╛ржирзЗ Error ржжрзЗржЦрж╛ржЪрзНржЫрзЗ ржХрж╛рж░ржг, ржЖржорж╛рж░ xampp file active ржХрж░рж╛ ржирж╛ржЗ ржПржЦржи, рждржмрзЗ ржжрзВржЪрж┐ржирзНрждрж╛рж░ ржХрж╛рж░ржг ржирж╛рж╛ржЗ рждрзБржорж┐ ржХрзЛржбржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЗ рж░рж╛ржи ржХрж░рзЛ ржПржмржВ рждрзЛржорж╛рж░ xampp file active ржХрж░рзЛ.")





# тЬЕ ржбрзЗржЯрж╛ржмрзЗрж╕ рж╕ржВржпрзЛржЧ
conn = mysql.connector.connect(
    host="localhost",
    user="root",
    password="",
    database="students_db"
)
cursor = conn.cursor()

st.title("ЁЯУЪ ржЫрж╛рждрзНрж░ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛ рж╕рж┐рж╕рзНржЯрзЗржо")

menu = st.selectbox("ЁЯУМ ржЕржкрж╢ржи ржмрзЗржЫрзЗ ржирж╛ржУ", ["ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзЛ", "рж╕ржм ржЫрж╛рждрзНрж░ ржжрзЗржЦрж╛ржУ", "ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рзЛ", "ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ"])

# тЬЕ рзз. ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзЛ
if menu == "ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзЛ":
    st.subheader("тЮХ ржирждрзБржи ржЫрж╛рждрзНрж░ ржпрзЛржЧ ржХрж░рзЛ")
    with st.form("add_form"):
        name = st.text_input("ЁЯСд ржирж╛ржо")
        age = st.number_input("ЁЯУЕ ржмрзЯрж╕", min_value=1, step=1)
        grade = st.selectbox("ЁЯОУ ржЧрзНрж░рзЗржб", ["A", "B", "C", "D", "F"])
        submit = st.form_submit_button("тЬЕ ржпрзЛржЧ ржХрж░рзЛ")
    if submit:
        if name:
            cursor.execute("INSERT INTO students (name, age, grade) VALUES (%s, %s, %s)", (name, age, grade))
            conn.commit()
            st.success("тЬЕ ржЫрж╛рждрзНрж░ рж╕ржлрж▓ржнрж╛ржмрзЗ ржпрзЛржЧ рж╣рзЯрзЗржЫрзЗ!")
        else:
            st.error("тЭЧ ржирж╛ржо рж▓рж┐ржЦрждрзЗ рж╣ржмрзЗред")

# тЬЕ рзи. рж╕ржм ржЫрж╛рждрзНрж░ ржжрзЗржЦрж╛ржУ
elif menu == "рж╕ржм ржЫрж╛рждрзНрж░ ржжрзЗржЦрж╛ржУ":
    st.subheader("ЁЯУД ржЫрж╛рждрзНрж░ рждрж╛рж▓рж┐ржХрж╛")
    cursor.execute("SELECT * FROM students")
    rows = cursor.fetchall()
    if rows:
        st.table(rows)
    else:
        st.info("тЪая╕П ржХрзЛржирзЛ ржЫрж╛рждрзНрж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред")

# тЬЕ рзй. ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рзЛ
elif menu == "ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рзЛ":
    st.subheader("ЁЯФБ ржЫрж╛рждрзНрж░рзЗрж░ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ ржХрж░рзЛ")
    cursor.execute("SELECT id, name FROM students")
    students = cursor.fetchall()
    student_dict = {f"{name} (ID: {sid})": sid for sid, name in students}
    selected_student = st.selectbox("ЁЯСд ржЫрж╛рждрзНрж░ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзЛ", list(student_dict.keys()))
    new_grade = st.selectbox("ЁЯЖХ ржирждрзБржи ржЧрзНрж░рзЗржб", ["A", "B", "C", "D", "F"])
    if st.button("тЬЕ ржЖржкржбрзЗржЯ ржХрж░рзЛ"):
        sid = student_dict[selected_student]
        cursor.execute("UPDATE students SET grade = %s WHERE id = %s", (new_grade, sid))
        conn.commit()
        st.success("ЁЯОЙ ржЧрзНрж░рзЗржб ржЖржкржбрзЗржЯ рж╣рзЯрзЗржЫрзЗ!")

# тЬЕ рзк. ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ
elif menu == "ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ":
    st.subheader("ЁЯЧСя╕П ржЫрж╛рждрзНрж░ ржбрж┐рж▓рж┐ржЯ ржХрж░рзЛ")
    cursor.execute("SELECT id, name FROM students")
    students = cursor.fetchall()
    student_dict = {f"{name} (ID: {sid})": sid for sid, name in students}
    selected_student = st.selectbox("тЭМ ржпрзЗржЗ ржЫрж╛рждрзНрж░ ржорзБржЫрждрзЗ ржЪрж╛ржУ", list(student_dict.keys()))
    if st.button("тЪая╕П ржЫрж╛рждрзНрж░ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ"):
        sid = student_dict[selected_student]
        cursor.execute("DELETE FROM students WHERE id = %s", (sid,))
        conn.commit()
        st.warning("ЁЯЧСя╕П ржЫрж╛рждрзНрж░ ржбрж┐рж▓рж┐ржЯ рж╣рзЯрзЗржЫрзЗ!")

# тЬЕ рж╕ржВржпрзЛржЧ ржмржирзНржз
cursor.close()
conn.close()


